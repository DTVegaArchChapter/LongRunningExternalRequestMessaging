version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    volumes:
      - kibana:/usr/share/kibana/data
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  searchapi:
    image: ${DOCKER_REGISTRY-}searchapi
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: SearchApi/Dockerfile

  searchhandler1:
    image: ${DOCKER_REGISTRY-}searchhandler1
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: SearchHandler/Dockerfile
    environment:
      - HttpClientTimeout=60000
      - PrefetchCount=10

  searchhandler2:
    image: ${DOCKER_REGISTRY-}searchhandler2   
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: SearchHandler/Dockerfile
    environment:
      - HttpClientTimeout=60000
      - PrefetchCount=10

  searchhandler3:
    image: ${DOCKER_REGISTRY-}searchhandler3
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: SearchHandler/Dockerfile
    environment:
      - HttpClientTimeout=60000
      - PrefetchCount=10

  searchtargetapi1:
    image: ${DOCKER_REGISTRY-}searchtargetapi1
    build:
      context: .
      dockerfile: SearchTargetApi/Dockerfile
    environment:
    - StoreId=1
    - Duration=10000

  notificationapi:
    image: ${DOCKER_REGISTRY-}notificationapi
    build:
      context: .
      dockerfile: NotificationApi/Dockerfile

  logapi:
    image: ${DOCKER_REGISTRY-}logapi
    depends_on:
      - elasticsearch
    build:
      context: .
      dockerfile: LogApi/Dockerfile

volumes:
  rabbitmq:
    driver: local
  elasticsearch:
    driver: local
  kibana:
    driver: local